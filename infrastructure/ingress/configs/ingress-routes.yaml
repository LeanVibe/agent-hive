apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: agent-hive-main-ingress
  namespace: leanvibe-agent-hive
  labels:
    app.kubernetes.io/name: leanvibe-agent-hive
    app.kubernetes.io/component: ingress
  annotations:
    # Ingress controller
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    
    # SSL configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "60s"
    nginx.ingress.kubernetes.io/rate-limit-rpm: "6000"
    
    # Load balancing
    nginx.ingress.kubernetes.io/load-balance: "least_conn"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$request_uri"
    
    # Session affinity
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "agent-hive-session"
    nginx.ingress.kubernetes.io/session-cookie-expires: "86400"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
    nginx.ingress.kubernetes.io/session-cookie-path: "/"
    nginx.ingress.kubernetes.io/session-cookie-change-on-failure: "true"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://agent-hive.yourdomain.com, https://api.agent-hive.yourdomain.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization, X-Requested-With"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-max-age: "86400"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options DENY always;
      add_header X-Content-Type-Options nosniff always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy strict-origin-when-cross-origin always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Performance optimizations
    nginx.ingress.kubernetes.io/proxy-body-size: "64m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "5"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    
    # Health checks
    nginx.ingress.kubernetes.io/upstream-vhost: "agent-hive-service.leanvibe-agent-hive.svc.cluster.local"
    
    # Cert-manager for automatic SSL
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"
spec:
  tls:
  - hosts:
    - agent-hive.yourdomain.com
    secretName: agent-hive-tls-cert
  rules:
  - host: agent-hive.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: agent-hive-service
            port:
              number: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: agent-hive-api-ingress
  namespace: leanvibe-agent-hive
  labels:
    app.kubernetes.io/name: leanvibe-agent-hive
    app.kubernetes.io/component: ingress-api
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
    # API-specific rate limiting (more restrictive)
    nginx.ingress.kubernetes.io/rate-limit: "50"
    nginx.ingress.kubernetes.io/rate-limit-window: "60s"
    
    # API load balancing
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    
    # API-specific headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-API-Version "1.0.0" always;
      add_header X-Rate-Limit-Remaining $limit_req_status always;
    
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.agent-hive.yourdomain.com
    secretName: agent-hive-api-tls-cert
  rules:
  - host: api.agent-hive.yourdomain.com
    http:
      paths:
      - path: /api(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: agent-hive-service
            port:
              number: 8081
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: agent-hive-webhook-ingress
  namespace: leanvibe-agent-hive
  labels:
    app.kubernetes.io/name: leanvibe-agent-hive
    app.kubernetes.io/component: ingress-webhook
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
    # Webhook-specific settings
    nginx.ingress.kubernetes.io/rate-limit: "20"
    nginx.ingress.kubernetes.io/rate-limit-window: "60s"
    
    # Session affinity for webhooks
    nginx.ingress.kubernetes.io/affinity: "ip"
    
    # Webhook timeout settings
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    
    # Disable buffering for real-time webhooks
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - webhook.agent-hive.yourdomain.com
    secretName: agent-hive-webhook-tls-cert
  rules:
  - host: webhook.agent-hive.yourdomain.com
    http:
      paths:
      - path: /webhook(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: agent-hive-service
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: agent-hive-monitoring-ingress
  namespace: leanvibe-agent-hive
  labels:
    app.kubernetes.io/name: leanvibe-agent-hive
    app.kubernetes.io/component: ingress-monitoring
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
    # Monitoring access control
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - Monitoring'
    
    # Monitoring-specific rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "30"
    nginx.ingress.kubernetes.io/rate-limit-window: "60s"
    
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - monitoring.agent-hive.yourdomain.com
    secretName: agent-hive-monitoring-tls-cert
  rules:
  - host: monitoring.agent-hive.yourdomain.com
    http:
      paths:
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090
      - path: /jaeger
        pathType: Prefix
        backend:
          service:
            name: jaeger-service
            port:
              number: 16686
---
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-basic-auth
  namespace: leanvibe-agent-hive
type: Opaque
data:
  auth: YWRtaW46JGFwcjEkSDY1dnlwYmIkMjN4dExJb0xUOUVvdVRKQ1dyYlB3LyAjIGFkbWluOmFkbWlu  # admin:admin (change in production)