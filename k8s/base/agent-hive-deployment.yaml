apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-hive
  namespace: leanvibe-agent-hive
  labels:
    app.kubernetes.io/name: leanvibe-agent-hive
    app.kubernetes.io/component: api
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: leanvibe-agent-hive
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: leanvibe-agent-hive
        app.kubernetes.io/component: api
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: agent-hive-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      containers:
      - name: agent-hive
        image: leanvibe-agent-hive:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: gateway
          containerPort: 8081
          protocol: TCP
        env:
        - name: LEANVIBE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: agent-hive-config
              key: LEANVIBE_ENVIRONMENT
        - name: LEANVIBE_LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: agent-hive-config
              key: LEANVIBE_LOG_LEVEL
        - name: LEANVIBE_REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: agent-hive-config
              key: LEANVIBE_REDIS_URL
        - name: LEANVIBE_POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: agent-hive-secrets
              key: postgres-url
              optional: true
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: agent-hive-secrets
              key: postgres-password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: agent-hive-secrets
              key: jwt-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: data
        persistentVolumeClaim:
          claimName: agent-hive-data-pvc
      - name: logs
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - leanvibe-agent-hive
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "amd64"
        effect: "NoSchedule"