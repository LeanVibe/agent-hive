apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-hive-config
  namespace: leanvibe-agent-hive
  labels:
    app.kubernetes.io/name: leanvibe-agent-hive
    app.kubernetes.io/component: config
data:
  # Application configuration
  LEANVIBE_ENVIRONMENT: "production"
  LEANVIBE_LOG_LEVEL: "INFO"
  LEANVIBE_DEBUG_MODE: "false"
  
  # Service URLs
  LEANVIBE_REDIS_URL: "redis://redis-service:6379"
  LEANVIBE_POSTGRES_URL: "postgresql://postgres:password@postgres-service:5432/agent_hive"
  LEANVIBE_PROMETHEUS_ENDPOINT: "http://prometheus-service:9090"
  LEANVIBE_JAEGER_ENDPOINT: "http://jaeger-service:14268/api/traces"
  
  # Performance settings
  WORKERS: "4"
  MAX_CONNECTIONS: "100"
  TIMEOUT: "60"
  
  # Security settings
  CORS_ORIGINS: "*"
  RATE_LIMIT_REQUESTS: "100"
  RATE_LIMIT_WINDOW: "60"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: leanvibe-agent-hive
  labels:
    app.kubernetes.io/name: leanvibe-agent-hive
    app.kubernetes.io/component: nginx
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream agent_hive_backend {
            server agent-hive-service:8000;
        }
        
        server {
            listen 80;
            server_name _;
            
            location / {
                proxy_pass http://agent_hive_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            location /health {
                access_log off;
                proxy_pass http://agent_hive_backend/health;
            }
        }
    }