[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test output options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=.claude
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=80

# Test markers
markers =
    unit: Unit tests for isolated components
    integration: Integration tests for component interaction
    performance: Performance and benchmarking tests
    mock_cli: Tests that use mock CLI interfaces
    slow: Tests that take longer to run

# Test logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Async test support  
asyncio_mode = strict

# Coverage settings
[coverage:run]
source = .claude
omit = 
    */__init__.py
    */tests/*
    */testing/*
    .claude/config/config.yaml

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if __name__ == .__main__.:
    raise AssertionError
    raise NotImplementedError